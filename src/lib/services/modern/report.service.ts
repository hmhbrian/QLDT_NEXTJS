import { BaseService } from "@/lib/core";
import { API_CONFIG } from "@/lib/config";
import { TopDepartment } from "@/lib/types/report.types";

// Interface cho d·ªØ li·ªáu th·ªëng k√™ b√°o c√°o
export interface AvgFeedbackData {
  q1_relevanceAvg: number;
  q2_clarityAvg: number;
  q3_structureAvg: number;
  q4_durationAvg: number;
  q5_materialAvg: number;
}

export interface MonthlyReportData {
  numberOfCourses: number;
  numberOfStudents: number;
  averangeCompletedPercentage: number;
  averangeTime: number;
  averagePositiveFeedback: number;
}

export interface CourseAndAvgFeedback {
  courseName: string;
  avgFeedback: AvgFeedbackData;
}

export interface StudentsOfCourse {
  courseName: string;
  totalStudent: number;
}

export interface ApiResponse<T> {
  success: boolean;
  message: string | null;
  data: T;
}

class ReportService extends BaseService {
  constructor() {
    super(""); // Base endpoint kh√¥ng c·∫ßn thi·∫øt v√¨ s·ª≠ d·ª•ng full paths
  }

  // API l·∫•y ƒë√°nh gi√° trung b√¨nh t·ªïng th·ªÉ
  async getAvgFeedback(): Promise<AvgFeedbackData> {
    console.log("üîç Calling getAvgFeedback API...");
    const response = await this.get<AvgFeedbackData>(
      API_CONFIG.endpoints.report.avgFeedback
    );
    console.log("üìä Processed response:", response);

    if (!response) {
      throw new Error("Kh√¥ng th·ªÉ l·∫•y d·ªØ li·ªáu ƒë√°nh gi√° trung b√¨nh");
    }

    return response;
  }

  // API l·∫•y b√°o c√°o theo th√°ng
  async getMonthlyReport(month: number): Promise<MonthlyReportData> {
    console.log(`üîç Calling getMonthlyReport API for month ${month}...`);
    const response = await this.get<MonthlyReportData>(
      API_CONFIG.endpoints.report.monthlyReport(month)
    );
    console.log("üìä Monthly report response:", response);

    if (!response) {
      throw new Error(`Kh√¥ng th·ªÉ l·∫•y d·ªØ li·ªáu b√°o c√°o th√°ng ${month}`);
    }

    return response;
  }

  // API l·∫•y danh s√°ch kh√≥a h·ªçc v√† ƒë√°nh gi√° trung b√¨nh
  async getCourseAndAvgFeedback(): Promise<CourseAndAvgFeedback[]> {
    const response = await this.get<CourseAndAvgFeedback[]>(
      API_CONFIG.endpoints.report.courseAndAvgFeedback
    );
    return response || [];
  }

  // API l·∫•y s·ªë h·ªçc vi√™n theo kh√≥a h·ªçc
  async getStudentsOfCourse(): Promise<StudentsOfCourse[]> {
    const response = await this.get<StudentsOfCourse[]>(
      API_CONFIG.endpoints.report.studentsOfCourse
    );
    return response || [];
  }
  
  // API for top departments
  async getTopDepartments(): Promise<TopDepartment[]> {
    const response = await this.get<TopDepartment[]>(
      API_CONFIG.endpoints.report.topDepartment
    );
    return response || [];
  }
}

export const reportService = new ReportService();
